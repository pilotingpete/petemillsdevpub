{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["PostWrapper","Index","edges","data","allMarkdownRemark","title","map","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","excerpt","query"],"mappings":"6NASMA,EAAW,sRAsCFC,UAxBD,SAAC,GAAc,IACnBC,EADkB,EAAXC,KACQC,kBAAfF,MACR,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQG,MAAO,cACf,YAAC,IAAD,CAAQA,MAAM,oBAAd,0HAGA,YAACL,EAAD,KACGE,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBT,MAAOE,EAAKI,YAAYN,MACxBU,KAAMR,EAAKI,YAAYI,KACvBC,QAAST,EAAKS,gBA+BnB,IAAMC,EAAK","file":"component---src-pages-index-jsx-f7cdc5fed13bb50f8a00.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport styled from '@emotion/styled';\nimport { Header, PostList } from 'components';\nimport { Layout } from 'layouts';\n\n\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin: 4rem 4rem 1rem 4rem;\n  @media (max-width: 1000px) {\n    margin: 4rem 2rem 1rem 2rem;\n  }\n  @media (max-width: 700px) {\n    margin: 4rem 1rem 1rem 1rem;\n  }\n`;\n\nconst Index = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <Helmet title={'Home Page'} />\n      <Header title=\"Pete Mills' Blog\">I like making things, and here are a few featured projects. Be sure to check the blog page\n      to see all of the projects.\n      </Header>\n      <PostWrapper>\n        {edges.map(({ node }) => (\n          <PostList\n            key={node.id}\n            cover={node.frontmatter.cover.childImageSharp.fluid}\n            path={node.frontmatter.path}\n            title={node.frontmatter.title}\n            date={node.frontmatter.date}\n            excerpt={node.excerpt}\n          />\n        ))}\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default Index;\n\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            frontmatter: PropTypes.shape({\n              cover: PropTypes.object.isRequired,\n              path: PropTypes.string.isRequired,\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n              tags: PropTypes.array,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: {featured: {eq: true},\n                      published: {eq: true}}\n      } \n      limit: 6\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 75)\n          frontmatter {\n            title\n            path\n            tags\n            date(formatString: \"MM.DD.YYYY\")\n            cover {\n              childImageSharp {\n                fluid(\n                  maxWidth: 1000\n                  quality: 90\n                  traceSVG: { color: \"#2B2B2F\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}